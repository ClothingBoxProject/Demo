plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6' // Spring Boot 의존성 자동 관리 추가 
	id 'com.github.node-gradle.node' version '3.5.1' // Node.js 플러그인 추가
}

group = 'com.first'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web' // REST API
	implementation 'org.jetbrains:annotations:24.0.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // DB 관리 API인 JPA(Java Persistence API)
	implementation 'mysql:mysql-connector-java:8.0.33' // MySQL Connector
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'

	implementation 'io.github.cdimascio:dotenv-java:3.0.0' //.env 파일 로드

	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring application의 보안 담당 프레임워크
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // 자바 JWT 라이브러리
	implementation 'javax.xml.bind:jaxb-api:2.3.1' // XML 문서와 Java 객체 간 매핑 자동화

	implementation 'com.opencsv:opencsv:5.7.1' // CSV 파일 읽기
	implementation 'org.apache.commons:commons-csv:1.9.0'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth 로그인시 필요한 라이브러리

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}